00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.14.01
Created On: 01/05/2021 23:47:47

00000000                             1  *------------------------------------------------------------
00000000                             2  * Title      :Fibonacci Sequence 
00000000                             3  * Written by :Shivangi Prajapati
00000000                             4  * Date       :01/05/20
00000000                             5  * Description:Calculates the terms of a fibonacci sequence 
00000000                             6  *             the user is asked to enter the first 2 terms 
00000000                             7  *             of the sequence and the number of terms wnated
00000000                             8  *------------------------------------------------------------
00001000                             9      ORG    $1000
00001000                            10  START:                  ; first instruction of program
00001000                            11  
00001000                            12  * Put program code here
00001000  43F9 00001108             13            lea      intro,A1
00001006  6100 00F4                 14            bsr      display
0000100A                            15            
0000100A  43F9 000011AB             16            lea      numTermMsg,a1
00001010  6100 00EA                 17            bsr      display
00001014  6100 00C8                 18            bsr      userInput
00001018  5501                      19            sub.b    #2,d1
0000101A  13C1 00001206             20            move.b   d1,elements
00001020                            21            
00001020                            22  *         display message and get first number
00001020  43F9 00001180             23            lea      firstNumMsg,a1  
00001026  6100 00D4                 24            bsr      display            #branch to subroutine
0000102A  6100 00B2                 25            bsr      userInput
0000102E  23C1 000011FE             26            move.l   d1,firstNum        #first number is stored 
00001034                            27  
00001034                            28  *         display message and get second number
00001034                            29                   
00001034  43F9 00001195             30            lea      secondNumMsg,a1
0000103A  6100 00C0                 31            bsr      display            #branch to subroutine
0000103E  6100 009E                 32            bsr      userInput
00001042  23C1 00001202             33            move.l   d1,secondNum
00001048                            34            
00001048                            35  *         display the first 2 terms 
00001048                            36            
00001048  43F9 000011ED             37            lea      termMsg,A1
0000104E  6100 00AC                 38            bsr      display 
00001052  2239 000011FE             39            move.l   firstNum,d1
00001058  303C 0003                 40            move     #3,d0
0000105C  4E4F                      41            trap     #15
0000105E  43F9 00001207             42            lea      newLine,a1
00001064  6100 0096                 43            bsr      display
00001068                            44  
00001068  2239 00001202             45            move.l   secondNum,d1
0000106E  303C 0003                 46            move     #3,d0
00001072  4E4F                      47            trap     #15
00001074  43F9 00001207             48            lea      newLine,a1
0000107A  6100 0080                 49            bsr      display    
0000107E                            50  
0000107E                            51  
0000107E                            52      
0000107E                            53  
0000107E                            54  addition:    
0000107E                            55  *         add the two numbers and store them in sum
0000107E  2239 00001202             56            move.l   secondNum,d1
00001084  D2B9 000011FE             57            add.l    firstNum,d1
0000108A  23C1 0000117C             58            move.l   d1,sum
00001090                            59           
00001090                            60  *         exchange the values for next sum
00001090  23F9 00001202 000011FE    61            move.l   secondNum,firstNum
0000109A  23F9 0000117C 00001202    62            move.l   sum,secondNum
000010A4                            63            
000010A4                            64  *         display the terms          
000010A4  303C 0003                 65            move     #3,d0
000010A8  2239 0000117C             66            move.l   sum,d1
000010AE  2439 0000117C             67            move.l   sum,d2
000010B4  4E4F                      68            trap     #15
000010B6  43F9 00001207             69            lea      newLine,a1
000010BC  6100 003E                 70            bsr      display
000010C0                            71            
000010C0                            72  *check if required numbers of terms are displayed or not, if yes than final message is displayed 
000010C0                            73  *else next term is calculated 
000010C0  5339 00001206             74            sub.b    #1,elements
000010C6  1239 00001206             75            move.b   elements, d1
000010CC  0C39 0000 00001206        76            cmp.b    #0,elements
000010D4  6700 0010                 77            beq      finalMessage
000010D8  60A4                      78            bra      addition
000010DA  6000 0028                 79            bra      end  
000010DE                            80           
000010DE                            81  * the last line must jump to end otherwise the functions will be displayed 
000010DE                            82  *fuction to get user input
000010DE                            83  userInput: 
000010DE  303C 0004                 84            move     #4,d0
000010E2  4E4F                      85            trap     #15
000010E4  4E75                      86            rts   
000010E6                            87  finalMessage:
000010E6  43F9 00001207             88            lea     newLine,a1
000010EC  6100 000E                 89            bsr     display
000010F0  43F9 000011CE             90            lea     finalMsg,a1
000010F6  6100 0004                 91            bsr     display
000010FA  4E75                      92            rts  
000010FC                            93              
000010FC                            94  display:
000010FC  303C 000E                 95            move    #14,d0
00001100  4E4F                      96            trap    #15
00001102  4E75                      97            rts 
00001104                            98    
00001104  4E72 2000                 99  end       STOP    #$2000
00001108                           100  
00001108                           101  
00001108                           102  
00001108                           103  
00001108                           104      
00001108                           105  * Put variables and constants here
00001108= 0D 0A 09 09 09 09 09     106  intro           dc.b    $0D,$0A,$09,$09,$09,$09,$09
0000110F= 2D 2D 2D 2D 2D 2D ...    107                  dc.b    '------------------------------',$0D,$0A,$09,$09,$09,$09,$09
00001134= 20 20 20 20 20 20 ...    108                  dc.b    '      Fibonacci Sequence      ',$0D,$0A,$09,$09,$09,$09,$09
00001159= 2D 2D 2D 2D 2D 2D ...    109                  dc.b    '------------------------------',$0D,$0A,$0D,$0A,0             
0000117C                           110  sum             ds.l    1   reserve word of memory for sum2
00001180= 45 6E 74 65 72 20 ...    111  firstNumMsg     dc.b    'Enter First Number: ',0    null terminated string
00001195= 45 6E 74 65 72 20 ...    112  secondNumMsg    dc.b    'Enter Second Number: ',0
000011AB= 45 6E 74 65 72 20 ...    113  numTermMsg      dc.b    'Enter the number of terms wanted: ',0
000011CE= 54 68 65 20 73 65 ...    114  finalMsg        dc.b    'The sequence has terminated!',$D,$A,0
000011ED= 54 68 65 20 74 65 ...    115  termMsg         dc.b    'The terms are:',$D,$A,0
000011FE                           116  firstNum        ds.l    1
00001202                           117  secondNum       ds.l    1
00001206= 0A                       118  elements        dc.b    10
00001207                           119  
00001207= 0D 0A 00                 120  newLine         dc.b    $0D,$0A,0
0000120A                           121      
0000120A                           122             END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDITION            107E
DISPLAY             10FC
ELEMENTS            1206
END                 1104
FINALMESSAGE        10E6
FINALMSG            11CE
FIRSTNUM            11FE
FIRSTNUMMSG         1180
INTRO               1108
NEWLINE             1207
NUMTERMMSG          11AB
SECONDNUM           1202
SECONDNUMMSG        1195
START               1000
SUM                 117C
TERMMSG             11ED
USERINPUT           10DE
